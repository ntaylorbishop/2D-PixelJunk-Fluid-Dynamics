#include "Game/FlowManager.hpp"
#include "Game/Particle.hpp"


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//STRUCTORS
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//---------------------------------------------------------------------------------------------------------------------------
FlowManager::FlowManager() {

}


//---------------------------------------------------------------------------------------------------------------------------
FlowManager::~FlowManager() {

}


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//UPDATE
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//---------------------------------------------------------------------------------------------------------------------------
void FlowManager::UpdateFlowCollisions(float deltaSeconds) {

	for (size_t idx = 0; idx < m_particles.size(); idx++) {

		m_particles[idx]->PushLeft(LEFT_PLANE);
		m_particles[idx]->PushRight(RIGHT_PLANE);
		m_particles[idx]->PushUp(FLOOR_PLANE);
	}
}


//---------------------------------------------------------------------------------------------------------------------------
void FlowManager::UpdateParticleCollisions(float deltaSeconds) {

}


//---------------------------------------------------------------------------------------------------------------------------
void FlowManager::Update(float deltaSeconds) {

	for (size_t idx = 0; idx < m_particles.size(); idx++) {
		m_particles[idx]->Update(deltaSeconds);
	}
	UpdateFlowCollisions(deltaSeconds);
	UpdateParticleCollisions(deltaSeconds);
}


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//RENDER
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//---------------------------------------------------------------------------------------------------------------------------
void FlowManager::Render() const {

	for (size_t idx = 0; idx < m_particles.size(); idx++) {
		m_particles[idx]->Render();
	}
}


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//SPAWNING
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//---------------------------------------------------------------------------------------------------------------------------
void FlowManager::SpawnParticle(const Vector3& pos) {

	Particle* newParticle = new Particle(pos, 0.2f);
	m_particles.push_back(newParticle);
}